<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.cacf</groupId>
	<artifactId>smartconnect-handler</artifactId>
	<packaging>jar</packaging>
	<name>${project.artifactId}</name>
	<description>Smartconnect Handler API</description>
	<version>2.5.2</version>
	<parent>
		<groupId>cacf.boot.socle</groupId>
		<artifactId>CACF_BOOT_PARENT</artifactId>
		<version>2.7.5</version>
	</parent>

	<properties>
		<java.version>11</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencies>

		<!-- Happy -->
		<dependency>
			<groupId>cacf.happy.socle</groupId>
			<artifactId>HAPPY_CORE</artifactId>
		</dependency>

		<!-- Security -->
		<dependency>
			<groupId>cacf.happy.socle</groupId>
			<artifactId>happy-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>cacf.happy.socle</groupId>
			<artifactId>happy-starter-actuator-security</artifactId>
		</dependency>

		<!-- Spring boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Prometheus -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- Redis starter -->
		<dependency>
			<groupId>cacf.happy.socle</groupId>
			<artifactId>happy-starter-redis-caching</artifactId>
		</dependency>

		<!-- Dev & Test -->
		<dependency>
			<groupId>cacf.happy.socle</groupId>
			<artifactId>HAPPY_TEST</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-inline</artifactId>
		    <version>4.0.0</version>
		    <scope>test</scope>
		</dependency>

		<!-- SQL Server and H2 -->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>swagger.properties</include>
					<include>application*.properties</include>
					<include>log4j2.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.13</version>
				<configuration>
					<repository>${docker.image.prefix}/${docker.image.name}</repository>
					<tag>${project.version}</tag>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
